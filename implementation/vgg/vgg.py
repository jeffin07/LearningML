# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11Rq6xXX0IrI9S7etLecn9vyVuf22D0tx
"""

from keras.models import Sequential
from keras.layers import Dense,Conv2D,MaxPooling2D,Flatten

def vgg16():
    print("vgg16")
    model = Sequential()
    # 2*64
    model.add(Conv2D(input_shape=(224, 224, 3), filters=64, kernel_size=3,
              activation='relu'))
    model.add(Conv2D(filters=64, kernel_size=3, activation='relu'))
    # pool
    model.add(MaxPooling2D(pool_size=(2, 2), strides=(2, 2)))
    # 2*128
    model.add(Conv2D(filters=128, kernel_size=3, activation='relu'))
    model.add(Conv2D(filters=128, kernel_size=3, activation='relu'))
    # pool
    model.add(MaxPooling2D(pool_size=(2, 2), strides=(2, 2)))
    # 3*256
    model.add(Conv2D(filters=256, kernel_size=3, activation='relu'))
    model.add(Conv2D(filters=256, kernel_size=3, activation='relu'))
    model.add(Conv2D(filters=256, kernel_size=3, activation='relu'))
    # pool
    model.add(MaxPooling2D(pool_size=(2, 2), strides=(2, 2)))
    # 3*512
    model.add(Conv2D(filters=512, kernel_size=3, activation='relu'))
    model.add(Conv2D(filters=512, kernel_size=3, activation='relu'))
    model.add(Conv2D(filters=512, kernel_size=3, activation='relu'))
    # pool
    model.add(MaxPooling2D(pool_size=(2, 2), strides=(2, 2)))
    # 3*512
    model.add(Conv2D(filters=512, kernel_size=3, activation='relu'))
    model.add(Conv2D(filters=512, kernel_size=3, activation='relu'))
    model.add(Conv2D(filters=512, kernel_size=3, activation='relu'))
    # pool
    model.add(MaxPooling2D(pool_size=(2, 2), strides=(2, 2)))
    # flatten
    model.add(Flatten())
    # fully connected layers
    model.add(Dense(4096, activation='relu'))
    model.add(Dense(4096, activation='relu'))
    model.add(Dense(1000, activation='softmax'))
    return model



